---
image: rust:latest

before_script:
    - cp cargo-config /usr/local/cargo/config
    # add armhf as an architecture
    - dpkg --add-architecture armhf
    # Must call apt-get update after modifying architectures
    - apt-get update
    # Cross compiling environment
    - apt-get install -y libc6-armhf-cross libc6-dev-armhf-cross gcc-arm-linux-gnueabihf
    # And the rust compiler
    - rustup target add armv7-unknown-linux-gnueabihf


example01:
    script:
        - cd cross_example_01
        # Check for x86_64
        - cargo check --target x86_64-unknown-linux-gnu
        # Check for armhf
        - cargo check --target armv7-unknown-linux-gnueabihf
        # compile
        - cargo build --target x86_64-unknown-linux-gnu --release
        - cargo build --target armv7-unknown-linux-gnueabihf --release

example02:
    variables:
        # These settings are to make the rust-dbus & pkgconfig permit cross
        # compilation and find it's linker data.
        PKG_CONFIG_PATH: "/usr/lib/arm-linux-gnueabihf/pkgconfig"
        PKG_CONFIG_ALLOW_CROSS: "true"

    script:
        # Dbus library headers for x86_64 and armhf.
        - apt-get install -y libdbus-1-dev libdbus-1-dev:armhf
        # build example 2
        - cd cross_example_02
        # Check for x86_64
        - cargo check --target x86_64-unknown-linux-gnu
        # Check for armhf
        - cargo check --target armv7-unknown-linux-gnueabihf
        # compile
        - cargo build --target x86_64-unknown-linux-gnu --release
        - cargo build --target armv7-unknown-linux-gnueabihf --release
...
